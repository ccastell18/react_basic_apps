[{"/Users/christopher/Desktop/react_basic_apps/src/reportWebVitals.js":"1","/Users/christopher/Desktop/react_basic_apps/src/App.js":"2","/Users/christopher/Desktop/react_basic_apps/src/index.js":"3","/Users/christopher/Desktop/react_basic_apps/src/components/layout/Navbar.js":"4","/Users/christopher/Desktop/react_basic_apps/src/components/users/UserItem.js":"5","/Users/christopher/Desktop/react_basic_apps/src/components/users/Users.js":"6","/Users/christopher/Desktop/react_basic_apps/src/components/layout/Spinner.js":"7","/Users/christopher/Desktop/react_basic_apps/src/components/users/Search.js":"8","/Users/christopher/Desktop/react_basic_apps/src/components/layout/Alert.js":"9","/Users/christopher/Desktop/react_basic_apps/src/components/users/User.js":"10","/Users/christopher/Desktop/react_basic_apps/src/components/repos/Repos.js":"11","/Users/christopher/Desktop/react_basic_apps/src/components/repos/RepoItem.js":"12","/Users/christopher/Desktop/react_basic_apps/src/components/pages/About.js":"13"},{"size":362,"mtime":1609471118673,"results":"14","hashOfConfig":"15"},{"size":3368,"mtime":1609906426380,"results":"16","hashOfConfig":"15"},{"size":478,"mtime":1609472068238,"results":"17","hashOfConfig":"15"},{"size":647,"mtime":1609905769695,"results":"18","hashOfConfig":"15"},{"size":710,"mtime":1609816038274,"results":"19","hashOfConfig":"15"},{"size":762,"mtime":1609564137207,"results":"20","hashOfConfig":"15"},{"size":274,"mtime":1609564066717,"results":"21","hashOfConfig":"15"},{"size":1314,"mtime":1609814074504,"results":"22","hashOfConfig":"15"},{"size":245,"mtime":1609812972041,"results":"23","hashOfConfig":"15"},{"size":3004,"mtime":1609908235487,"results":"24","hashOfConfig":"15"},{"size":275,"mtime":1609818891272,"results":"25","hashOfConfig":"15"},{"size":306,"mtime":1609819057880,"results":"26","hashOfConfig":"15"},{"size":234,"mtime":1609905643137,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"7af4lr",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/christopher/Desktop/react_basic_apps/src/reportWebVitals.js",[],["58","59"],"/Users/christopher/Desktop/react_basic_apps/src/App.js",["60"],"import React, {Component, Fragment} from 'react'\nimport axios from 'axios'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\n\nimport Navbar from './components/layout/Navbar'\nimport Users from './components/users/Users'\nimport User from './components/users/User'\nimport Search from './components/users/Search'\nimport Alert from './components/layout/Alert'\n\nimport About from './components/pages/About'\n\nimport './App.css';\n\nclass App extends Component{\n  state = {\n    users:[],\n    user: {},\n    loading: false,\n    alert: null,\n    repos: []\n  }\n\n  // async componentDidMount() {\n    //axios uses promises\n     // axios.get('https://api.github.com/users').then(res => console.log(res.data))\n    \n     //use setState({}) to change the state.\n  //   this.setState({loading: true})\n\n     //using async add await in front of axios call and get rid of promise and make into a variable.\n  //   const res = await axios.get(`https://api.github.com/users?client_id=${process.env.REACT_APP_CLIENT_ID}&${process.env.REACT_APP_CLIENT_SECRET}`)\n\n  //   this.setState({users: res.data, loading: false})\n  // }\n  \n  //search github users\n  searchUsers = async text =>{\n\n    this.setState({loading: true})\n\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_CLIENT_ID}&${process.env.REACT_APP_CLIENT_SECRET}`)\n\n    this.setState({users: res.data.items, loading: false})\n  }\n\n  //Get single Github user\n  getUser = async (username) =>{\n    this.setState({loading: true})\n\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_CLIENT_ID}&${process.env.REACT_APP_CLIENT_SECRET}`)\n\n    this.setState({user: res.data, loading: false})\n  }\n\n  //get user repos\n  getUserRepos = async (username) =>{\n    this.setState({loading: true})\n\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_CLIENT_ID}&${process.env.REACT_APP_CLIENT_SECRET}`)\n\n    this.setState({user: res.data, loading: false})\n  }\n\n  //clear users from state\n  clearUsers = () => this.setState({users: [], loading: false})\n\n  //set Alert\n  setAlert = (msg, type) =>{\n    this.setState({alert: {msg,type}})\n    \n    setTimeout(() => this.setState({alert: null}), 3000)\n  }\n\n  render(){\n\n    const{repos, users, user, loading, alert} = this.state\n\n  return (\n    <Router>\n      <div>\n        <Navbar/>\n        <div className='container'>\n          <Alert alert={alert}/>\n            <Switch>\n              <Route exact path='/' render={props => (\n                <Fragment>\n                <Search \n                searchUsers={this.searchUsers} \n                clearUsers={this.clearUsers} \n                showClear={users.length > 0 ? true: false} \n                setAlert={this.setAlert}/>\n                <Users loading={loading} users={users} />\n                </Fragment>\n              )}/>\n              <Route exact path='/about' component={About}/>\n              <Route exact path='/user/:login' render={props => (\n                <User \n                {...props} \n                getUser={this.getUser} \n                user={user} \n                loading={loading}/>\n              )}/>\n            </Switch>\n        </div>  \n      </div>\n    </Router>\n  );\n}\n}\n\nexport default App;\n",["61","62"],"/Users/christopher/Desktop/react_basic_apps/src/index.js",[],"/Users/christopher/Desktop/react_basic_apps/src/components/layout/Navbar.js",[],"/Users/christopher/Desktop/react_basic_apps/src/components/users/UserItem.js",["63"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\n\n const UserItem = ({user:{login, avatar_url, html_url}}) => {\n \n    //instead of state elements are being brought in as props from Users state user from map()\n    //const {login, avatar_url, html_url}= props.user;\n    return (\n      <div className=\"card text-center\">\n        <img src={avatar_url} className=\"round-img\" style={{width: '60px'}} />  \n        <h3>{login}</h3>    \n        <div>\n        <Link to={`/user/${login}`} className=\"btn btn-dark btn-sm my-1\">More</Link>\n        </div>\n      </div>\n    )\n  }\n\n  UserItem.propTypes = {\n    user: PropTypes.object.isRequired,\n  }\n\n\nexport default UserItem\n","/Users/christopher/Desktop/react_basic_apps/src/components/users/Users.js",[],"/Users/christopher/Desktop/react_basic_apps/src/components/layout/Spinner.js",[],"/Users/christopher/Desktop/react_basic_apps/src/components/users/Search.js",[],"/Users/christopher/Desktop/react_basic_apps/src/components/layout/Alert.js",[],"/Users/christopher/Desktop/react_basic_apps/src/components/users/User.js",["64"],"/Users/christopher/Desktop/react_basic_apps/src/components/repos/Repos.js",[],"/Users/christopher/Desktop/react_basic_apps/src/components/repos/RepoItem.js",[],"/Users/christopher/Desktop/react_basic_apps/src/components/pages/About.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":77,"column":11,"nodeType":"71","messageId":"72","endLine":77,"endColumn":16},{"ruleId":"65","replacedBy":"73"},{"ruleId":"67","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":11,"column":9,"nodeType":"77","endLine":11,"endColumn":79},{"ruleId":"78","severity":1,"message":"79","line":49,"column":15,"nodeType":"77","endLine":54,"endColumn":17},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'repos' is assigned a value but never used.","Identifier","unusedVar",["80"],["81"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]